ylab("WAR")
gridExtra::grid.arrange(p,q,ncol=2)
rmse_df <- function(formulalm, formularf, splitnum, df) {
fitlist <- list()
for(i in 1:splitnum) {
train_ind = sample.int(N, N_train, replace=FALSE) %>% sort
mlbtrain = df[train_ind,]
mlbtest = df[-train_ind,]
# Linear Model!
lm1_mlb <- lm(formulalm, data = mlbtrain)
yhat_lm1_mlb <- predict(lm1_mlb, mlbtest)
# Random Forests!
forest1_mlb <- randomForest(formularf, data = mlbtrain, mtry = 8, ntree = 500)
yhat_forest1_mlb <- predict(forest1_mlb, mlbtest)
fitlist[[i]] <- data.frame(rmse_lm1_mlb = (mean((yhat_lm1_mlb - mlbtest$aav)^2) %>% sqrt),
rmse_forest1_mlb = (mean((yhat_forest1_mlb - mlbtest$aav)^2) %>% sqrt),
diff = rmse_forest1_mlb - rmse_lm1_mlb)
}
rbindlist(fitlist, idcol = T)
}
table <- rmse_df(formulalm =
aav ~ agecontract + poly(PC1,2) + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15 + PC16 + PC17 + PC18 + PC19 + PC20,
formularf =
aav ~ agecontract + PC1 + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15 + PC16 + PC17 + PC18 + PC19 + PC20,
splitnum = 100,
df = mlbpc)
varImpPlot(forest1_mlb)
mean(table$rmse_lm1_mlb)
mean(table$rmse_forest1_mlb)
mean(table$diff)
par(mfrow = c(1,1))
varImpPlot(forest1_mlb)
summary(pc_contracts)   # Can explain 85% of the variation with 15 principal components, 90% with 20
table <- rmse_df(formulalm =
aav ~ agecontract + yr + poly(PC1,2) + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15 + PC16 + PC17 + PC18 + PC19 + PC20,
formularf =
aav ~ agecontract + yr + PC1 + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15 + PC16 + PC17 + PC18 + PC19 + PC20,
splitnum = 100,
df = mlbpc)
mean(table$rmse_lm1_mlb)
mean(table$rmse_forest1_mlb)
mlbcontracts3yr <- read.csv("~/University of Texas/Data Mining & Statistical Inference/Final Project/mlbcontracts3yr.csv")
allstats3yr <- subset(mlbcontracts3yr, select = -c(index,player,pos,agecontract,ageprioryr,contractyrs,guarantee,aav,team,framing,playerid))
pc_3yr <- prcomp(allstats3yr, rank = 25, scale. = TRUE)  # PCA on 3-year stats
summary(pc_3yr)   # Can explain 85% of the variation with 15 principal components, 90% with 20
load3 = pc_3yr$rotation  # Characterizes each component
scores3 = pc_3yr$x  # Characterizes each player
mlb3yr <- cbind(contractinfo, scores3)
mlb3yr$nameyr <- paste(mlb3yr$player, mlb3yr$yr)
load3[order(load3[,1], decreasing = TRUE),1]
table3yr <- rmse_df(formulalm =
aav ~ agecontract + poly(PC1,2) + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15,
formularf =
aav ~ agecontract + PC1 + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15,
splitnum = 100,
df = mlb3yr)
mean(table$rmse_lm1_mlb)
mean(table$rmse_forest1_mlb)
mean(table$diff)
mean(table3yr$rmse_lm1_mlb)
mean(table3yr$rmse_forest1_mlb)
mean(table3yr$diff)
table <- rmse_df(formulalm =
aav ~ agecontract + poly(PC1,2) + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15 + PC16 + PC17 + PC18 + PC19 + PC20,
formularf =
aav ~ agecontract + PC1 + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15 + PC16 + PC17 + PC18 + PC19 + PC20,
splitnum = 100,
df = mlbpc)
# Who wins?
mean(table$rmse_lm1_mlb)
mean(table$rmse_forest1_mlb)
table3yr <- rmse_df(formulalm =
aav ~ agecontract + poly(PC1,2) + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15,
formularf =
aav ~ agecontract + PC1 + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15,
splitnum = 100,
df = mlb3yr)
# Who wins the 3-year contest?
mean(table3yr$rmse_lm1_mlb)
mean(table3yr$rmse_forest1_mlb)
varImpPlot(forest1_mlb)  # PC1 hugely important, which must be why accounting for its quadratic curvature improved the LM so much
head(load3[order(load3[,1], decreasing = TRUE),1],8)
head(load3[order(load3[,1]),1],8)
library(mosaic)
library(data.table)
library(tidyverse)
library(randomForest)
library(foreach)
options(scipen = 999)
mlbcontracts <- read.csv("~/University of Texas/Data Mining & Statistical Inference/Final Project/mlbcontracts.csv")
mlbcontracts3yr <- read.csv("~/University of Texas/Data Mining & Statistical Inference/Final Project/mlbcontracts3yr.csv")
# Split up indices, factors, contract info, and framing from main data
contractinfo <- subset(mlbcontracts, select = c(player,yr,pos,agecontract,aav))
allstats <- subset(mlbcontracts, select = -c(index,player,pos,agecontract,ageprioryr,contractyrs,guarantee,aav,team,framing,playerid))
allstats3yr <- subset(mlbcontracts3yr, select = -c(index,player,pos,agecontract,ageprioryr,contractyrs,guarantee,aav,team,framing,playerid))
# Fill in "fld" with 0 (for Jason Giambi 2014, Travis Hafner 2013, Jim Thome 2010, Jim Thome 2011, Hideki Matsui 2010, Jim Thome 2010)
allstats[is.na(allstats)] <- 0
# Principal Component Analysis (1-Year)
pc_contracts <- prcomp(allstats, rank = 25, scale. = TRUE)  # PCA on 1-year stats
summary(pc_contracts)   # Can explain 85% of the variation with 15 principal components, 90% with 20
loadings = pc_contracts$rotation  # Characterizes each component
scores = pc_contracts$x  # Characterizes each player
# Principal Component Analysis (3-Year)
pc_3yr <- prcomp(allstats3yr, rank = 25, scale. = TRUE)  # PCA on 3-year stats
summary(pc_3yr)   # Can explain 85% of the variation with 15 principal components, 90% with 20
load3 = pc_3yr$rotation  # Characterizes each component
scores3 = pc_3yr$x  # Characterizes each player
# New data frames
mlbpc <- cbind(contractinfo, scores)
mlbpc$nameyr <- paste(mlbpc$player, mlbpc$yr)
mlb3yr <- cbind(contractinfo, scores3)
mlb3yr$nameyr <- paste(mlb3yr$player, mlb3yr$yr)
# What describes PC1? (Using 3-year dataset, though it's largely the same in the 1-year)
# Typical MLB job-seeker: weak hitters, primary trade is defense, probably journeymen & utility players
# Top 8 features
head(load3[order(load3[,1], decreasing = TRUE),1],8)
# Bottom 8 features
head(load3[order(load3[,1]),1],8)
# Illustrating nonlinearity between talent and money
simplelm <- lm(aav ~ poly(PC1,2), data = mlbpc)
quadpred <- predict(simplelm)
p <-
ggplot(data = mlbpc) +
geom_point(mapping = aes(x = PC1, y = aav)) +
xlab("Principal Component 1") +
ylab("Average Annual Value") +
geom_line(aes(x = PC1, y = quadpred))
q <-
ggplot(data = mlbpc) +
geom_point(mapping = aes(x = PC1, y = mlbcontracts$war)) +
xlab("Principal Component 1") +
ylab("WAR")
gridExtra::grid.arrange(p,q,ncol=2)
###   Making predictions   ###
N = nrow(mlbpc)
# split into a training and testing set
train_frac = 0.8
N_train = floor(train_frac*N)
N_test = N - N_train
# Create the function that will give us our table
rmse_df <- function(formulalm, formularf, splitnum, df) {
fitlist <- list()
for(i in 1:splitnum) {
train_ind = sample.int(N, N_train, replace=FALSE) %>% sort
mlbtrain = df[train_ind,]
mlbtest = df[-train_ind,]
# Linear Model!
lm1_mlb <- lm(formulalm, data = mlbtrain)
yhat_lm1_mlb <- predict(lm1_mlb, mlbtest)
# Random Forests!
forest1_mlb <- randomForest(formularf, data = mlbtrain, mtry = 8, ntree = 500)
yhat_forest1_mlb <- predict(forest1_mlb, mlbtest)
fitlist[[i]] <- data.frame(rmse_lm1_mlb = (mean((yhat_lm1_mlb - mlbtest$aav)^2) %>% sqrt),
rmse_forest1_mlb = (mean((yhat_forest1_mlb - mlbtest$aav)^2) %>% sqrt))
}
rbindlist(fitlist, idcol = T)
}
###   RMSE results   ###
# 1-year
table1yr <- rmse_df(formulalm =
aav ~ agecontract + poly(PC1,2) + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15 + PC16 + PC17 + PC18 + PC19 + PC20,
formularf =
aav ~ agecontract + PC1 + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15 + PC16 + PC17 + PC18 + PC19 + PC20,
splitnum = 100,
df = mlbpc)
# Who wins?
mean(table1yr$rmse_lm1_mlb)
mean(table1yr$rmse_forest1_mlb)
# 3-year
table3yr <- rmse_df(formulalm =
aav ~ agecontract + poly(PC1,2) + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15,
formularf =
aav ~ agecontract + PC1 + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15,
splitnum = 100,
df = mlb3yr)
# Who wins?
mean(table3yr$rmse_lm1_mlb)
mean(table3yr$rmse_forest1_mlb)
# Sample Variance Importance Plot
varImpPlot(forest1_mlb)  # PC1 hugely important, which must be why accounting for its quadratic curvature improved the LM so much
View(mlbcontracts3yr)
train_ind = sample.int(N, N_train, replace=FALSE) %>% sort
mlbtrain = table3yr[train_ind,]
mlbtest = table3yr[-train_ind,]
forest_ex <- randomForest(aav ~ agecontract + PC1 + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15, data = mlbtrain, mtry = 5, ntree = 500)
yhat_forest_ex <- predict(forest_ex, mlbtest)
varImpPlot(forest1_mlb)  # PC1 hugely important, which must be why accounting for its quadratic curvature improved the LM so much
View(mlbtest)
mlbtest = table3yr[-train_ind,]
mlbtrain = mlbcontracts3yr[train_ind,]
mlbtest = mlbcontracts3yr[-train_ind,]
forest_ex <- randomForest(aav ~ agecontract + PC1 + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15, data = mlbtrain, mtry = 5, ntree = 500)
yhat_forest_ex <- predict(forest_ex, mlbtest)
varImpPlot(forest_ex)  # PC
mlbtrain = pc_3yr[train_ind,]
mlbtest = pc_3yr[-train_ind,]
forest_ex <- randomForest(aav ~ agecontract + PC1 + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15, data = mlbtrain, mtry = 5, ntree = 500)
yhat_forest_ex <- predict(forest_ex, mlbtest)
varImpPlot(forest_ex)  # PC1 hugely important, which must be why accounting for its quadratic curvature improved the LM so much
mlbtrain = mlb3yr[train_ind,]
mlbtest = mlb3yr[-train_ind,]
forest_ex <- randomForest(aav ~ agecontract + PC1 + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15, data = mlbtrain, mtry = 5, ntree = 500)
yhat_forest_ex <- predict(forest_ex, mlbtest)
varImpPlot(forest_ex)  # PC1 hugely important, which must be why accounting for its quadratic curvature improved the LM so much
summary(cars)
summary(cars)
summary(cars)
summary(cars)
library(mosaic)
library(data.table)
library(tidyverse)
library(randomForest)
library(foreach)
options(scipen = 999)
mlbcontracts1yr <- read.csv("~/University of Texas/Data Mining & Statistical Inference/Final Project/mlbcontracts.csv")
mlbcontracts3yr <- read.csv("~/University of Texas/Data Mining & Statistical Inference/Final Project/mlbcontracts3yr.csv")
# Split up indices, factors, contract info, and framing from main data
contractinfo <- subset(mlbcontracts1yr, select = c(player,yr,pos,agecontract,aav))
allstats1yr <- subset(mlbcontracts1yr, select = -c(index,player,pos,agecontract,ageprioryr,contractyrs,guarantee,aav,team,framing,playerid))
allstats3yr <- subset(mlbcontracts3yr, select = -c(index,player,pos,agecontract,ageprioryr,contractyrs,guarantee,aav,team,framing,playerid))
# Fill in "fld" with 0 (for Jason Giambi 2014, Travis Hafner 2013, Jim Thome 2010, Jim Thome 2011, Hideki Matsui 2010, Jim Thome 2010)
allstats[is.na(allstats)] <- 0
# Principal Component Analysis (1-Year)
pc_1yr <- prcomp(allstats1yr, rank = 25, scale. = TRUE)  # PCA on 1-year stats
load1 = pc_1yr$rotation  # Characterizes each component
scores1 = pc_1yr$x  # Characterizes each player
# Principal Component Analysis (3-Year)
pc_3yr <- prcomp(allstats3yr, rank = 25, scale. = TRUE)  # PCA on 3-year stats
load3 = pc_3yr$rotation  # Characterizes each component
scores3 = pc_3yr$x  # Characterizes each player
# PCA Summaries
summary(pc_1yr)   # Can explain 85% of the variation with 15 principal components, 90% with 20
summary(pc_3yr)   # Can explain 85% of the variation with 11 principal components, 90% with 15
# What describes PC1? (Using 3-year dataset, though it's largely the same in the 1-year)
# Typical MLB job-seeker: weak hitters, primary trade is defense, probably journeymen & utility players
# Top 8 features
head(load3[order(load3[,1], decreasing = TRUE),1],8)
# Bottom 8 features
head(load3[order(load3[,1]),1],8)
# New data frames
mlb1yr <- cbind(contractinfo, scores1)
mlb1yr$nameyr <- paste(mlb1yr$player, mlb1yr$yr)
mlb3yr <- cbind(contractinfo, scores3)
mlb3yr$nameyr <- paste(mlb3yr$player, mlb3yr$yr)
# Illustrating nonlinearity between talent and money
simplelm <- lm(aav ~ poly(PC1,2), data = mlb1yr)
quadpred <- predict(simplelm)
p <-
ggplot(data = mlb1yr) +
geom_point(mapping = aes(x = PC1, y = aav)) +
xlab("Principal Component 1") +
ylab("Average Annual Value") +
geom_line(aes(x = PC1, y = quadpred))
q <-
ggplot(data = mlb1yr) +
geom_point(mapping = aes(x = PC1, y = mlbcontracts1yr$war)) +
xlab("Principal Component 1") +
ylab("WAR")
gridExtra::grid.arrange(p,q,ncol=2)
###   Making predictions   ###
N = nrow(mlb1yr)
# split into a training and testing set
train_frac = 0.8
N_train = floor(train_frac*N)
N_test = N - N_train
train_index = sample.int(N, N_train, replace=FALSE) %>% sort
train_ex = mlb3yr[train_index,]
test_ex = mlb3yr[-train_index,]
forest_ex <- randomForest(aav ~ agecontract + PC1 + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15, data = mlbtrain, mtry = 5, ntree = 500)
yhat_forest_ex <- predict(forest_ex, mlbtest)
varImpPlot(forest_ex)  # PC1 hugely important, which must be why accounting for its quadratic curvature improved the LM so much
allstats1yr[is.na(allstats1yr)] <- 0
# Principal Component Analysis (1-Year)
pc_1yr <- prcomp(allstats1yr, rank = 25, scale. = TRUE)  # PCA on 1-year stats
load1 = pc_1yr$rotation  # Characterizes each component
scores1 = pc_1yr$x  # Characterizes each player
# Principal Component Analysis (3-Year)
pc_3yr <- prcomp(allstats3yr, rank = 25, scale. = TRUE)  # PCA on 3-year stats
load3 = pc_3yr$rotation  # Characterizes each component
scores3 = pc_3yr$x  # Characterizes each player
# PCA Summaries
summary(pc_1yr)   # Can explain 85% of the variation with 15 principal components, 90% with 20
summary(pc_3yr)   # Can explain 85% of the variation with 11 principal components, 90% with 15
# What describes PC1? (Using 3-year dataset, though it's largely the same in the 1-year)
# Typical MLB job-seeker: weak hitters, primary trade is defense, probably journeymen & utility players
# Top 8 features
head(load3[order(load3[,1], decreasing = TRUE),1],8)
# Bottom 8 features
head(load3[order(load3[,1]),1],8)
# New data frames
mlb1yr <- cbind(contractinfo, scores1)
mlb1yr$nameyr <- paste(mlb1yr$player, mlb1yr$yr)
mlb3yr <- cbind(contractinfo, scores3)
mlb3yr$nameyr <- paste(mlb3yr$player, mlb3yr$yr)
# Illustrating nonlinearity between talent and money
simplelm <- lm(aav ~ poly(PC1,2), data = mlb1yr)
quadpred <- predict(simplelm)
p <-
ggplot(data = mlb1yr) +
geom_point(mapping = aes(x = PC1, y = aav)) +
xlab("Principal Component 1") +
ylab("Average Annual Value") +
geom_line(aes(x = PC1, y = quadpred))
q <-
ggplot(data = mlb1yr) +
geom_point(mapping = aes(x = PC1, y = mlbcontracts1yr$war)) +
xlab("Principal Component 1") +
ylab("WAR")
gridExtra::grid.arrange(p,q,ncol=2)
###   Making predictions   ###
N = nrow(mlb1yr)
# split into a training and testing set
train_frac = 0.8
N_train = floor(train_frac*N)
N_test = N - N_train
train_index = sample.int(N, N_train, replace=FALSE) %>% sort
train_ex = mlb3yr[train_index,]
test_ex = mlb3yr[-train_index,]
forest_ex <- randomForest(aav ~ agecontract + PC1 + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15, data = mlbtrain, mtry = 5, ntree = 500)
yhat_forest_ex <- predict(forest_ex, mlbtest)
varImpPlot(forest_ex)  # PC1 hugely important, which must be why accounting for its quadratic curvature improved the LM so much
train_ex = mlb3yr[train_index,]
test_ex = mlb3yr[-train_index,]
forest_ex <- randomForest(aav ~ agecontract + PC1 + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15, data = train_ex, mtry = 5, ntree = 500)
yhat_forest_ex <- predict(forest_ex, test_ex)
varImpPlot(forest_ex)  # PC1 hugely important, which must be why accounting for its quadratic curvature improved the LM so much
devtools::install_github('yihui/tinytex')
install.packages("devtools")
devtools::install_github('yihui/tinytex')
hist(contractinfo$aav)
mlbcontracts1yr <- read.csv("~/University of Texas/Data Mining & Statistical Inference/Final Project/mlbcontracts.csv")
# Split up indices, factors, contract info, and framing from main data
contractinfo <- subset(mlbcontracts1yr, select = c(player,yr,pos,agecontract,aav))
hist(contractinfo$aav)
View(contractinfo)
load3[order(load3[,2], decreasing = TRUE),2] # probably hard-swinging uppercutters, inclined to hit HRs or strike out, but mostly strike out
library(mosaic)
library(data.table)
library(tidyverse)
library(randomForest)
library(foreach)
options(scipen = 999)
mlbcontracts1yr <- read.csv("~/University of Texas/Data Mining & Statistical Inference/Final Project/mlbcontracts.csv")
mlbcontracts3yr <- read.csv("~/University of Texas/Data Mining & Statistical Inference/Final Project/mlbcontracts3yr.csv")
# Split up indices, factors, contract info, and framing from main data
contractinfo <- subset(mlbcontracts1yr, select = c(player,yr,pos,agecontract,aav))
allstats1yr <- subset(mlbcontracts1yr, select = -c(index,player,pos,agecontract,ageprioryr,contractyrs,guarantee,aav,team,framing,playerid))
allstats3yr <- subset(mlbcontracts3yr, select = -c(index,player,pos,agecontract,ageprioryr,contractyrs,guarantee,aav,team,framing,playerid))
hist(contractinfo$aav)
# Fill in "fld" with 0 (for Jason Giambi 2014, Travis Hafner 2013, Jim Thome 2010, Jim Thome 2011, Hideki Matsui 2010, Jim Thome 2010)
allstats1yr[is.na(allstats1yr)] <- 0
# Principal Component Analysis (1-Year)
pc_1yr <- prcomp(allstats1yr, rank = 20, scale. = TRUE)  # PCA on 1-year stats
load1 = pc_1yr$rotation  # Characterizes each component
scores1 = pc_1yr$x  # Characterizes each player
# Principal Component Analysis (3-Year)
pc_3yr <- prcomp(allstats3yr, rank = 15, scale. = TRUE)  # PCA on 3-year stats
load3 = pc_3yr$rotation  # Characterizes each component
scores3 = pc_3yr$x  # Characterizes each player
# PCA Summaries
summary(pc_1yr)   # Can explain 85% of the variation with 15 principal components, 90% with 20
summary(pc_3yr)   # Can explain 85% of the variation with 11 principal components, 90% with 15
# What describes PC1? (Using 3-year dataset, though it's largely the same in the 1-year)
# Typical MLB job-seeker: weak hitters, primary trade is defense, probably journeymen & utility players
# Top 8 features
head(load3[order(load3[,1], decreasing = TRUE),1],8)
# Bottom 8 features
head(load3[order(load3[,1]),1],8)
# New data frames
mlb1yr <- cbind(contractinfo, scores1)
mlb1yr$nameyr <- paste(mlb1yr$player, mlb1yr$yr)
mlb3yr <- cbind(contractinfo, scores3)
mlb3yr$nameyr <- paste(mlb3yr$player, mlb3yr$yr)
# Illustrating nonlinearity between talent and money
simplelm <- lm(aav ~ poly(PC1,2), data = mlb1yr)
quadpred <- predict(simplelm)
p <-
ggplot(data = mlb1yr) +
geom_point(mapping = aes(x = PC1, y = aav)) +
xlab("Principal Component 1") +
ylab("Average Annual Value") +
geom_line(aes(x = PC1, y = quadpred)) +
title("Figure 1. Mapping PC1 to AAV")
q <-
ggplot(data = mlb1yr) +
geom_point(mapping = aes(x = PC1, y = mlbcontracts1yr$war)) +
xlab("Principal Component 1") +
ylab("WAR") +
title("Figure 2. Mapping PC1 to WAR")
gridExtra::grid.arrange(p,q,ncol=2)
###   Making predictions   ###
N = nrow(mlb1yr)
# split into a training and testing set
train_frac = 0.8
N_train = floor(train_frac*N)
N_test = N - N_train
train_index = sample.int(N, N_train, replace=FALSE) %>% sort
train_ex = mlb3yr[train_index,]
test_ex = mlb3yr[-train_index,]
forest_ex <- randomForest(aav ~ agecontract + PC1 + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15, data = train_ex, mtry = 5, ntree = 500)
yhat_forest_ex <- predict(forest_ex, test_ex)
varImpPlot(forest_ex)  # PC1 hugely important, which must be why accounting for its quadratic curvature improved the LM so much
train_index = sample.int(N, N_train, replace=FALSE) %>% sort
train_ex = mlb3yr[train_index,]
test_ex = mlb3yr[-train_index,]
forest_ex <- randomForest(aav ~ agecontract + PC1 + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15, data = train_ex, mtry = 5, ntree = 500)
yhat_forest_ex <- predict(forest_ex, test_ex)
varImpPlot(forest_ex)  # PC1 hugely important, which must be why accounting for its quadratic curvature improved the LM so much
train_index = sample.int(N, N_train, replace=FALSE) %>% sort
train_ex = mlb3yr[train_index,]
test_ex = mlb3yr[-train_index,]
forest_ex <- randomForest(aav ~ agecontract + PC1 + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15, data = train_ex, mtry = 5, ntree = 500)
yhat_forest_ex <- predict(forest_ex, test_ex)
varImpPlot(forest_ex)  # PC1 hugely important, which must be why accounting for its quadratic curvature improved the LM so much
train_index = sample.int(N, N_train, replace=FALSE) %>% sort
train_ex = mlb3yr[train_index,]
test_ex = mlb3yr[-train_index,]
forest_ex <- randomForest(aav ~ agecontract + PC1 + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15, data = train_ex, mtry = 5, ntree = 500)
yhat_forest_ex <- predict(forest_ex, test_ex)
varImpPlot(forest_ex)  # PC1 hugely important, which must be why accounting for its quadratic curvature improved the LM so much
load3[order(load3[,2], decreasing = TRUE),2] # probably hard-swinging uppercutters, inclined to hit HRs or strike out, but mostly strike out
load3[order(load3[,6], decreasing = TRUE),6] # probably hard-swinging uppercutters, inclined to hit HRs or strike out, but mostly strike out
load3[order(load3[,8], decreasing = TRUE),8] # probably hard-swinging uppercutters, inclined to hit HRs or strike out, but mostly strike out
set.seed(500)
train_index = sample.int(N, N_train, replace=FALSE) %>% sort
train_ex = mlb3yr[train_index,]
test_ex = mlb3yr[-train_index,]
forest_ex <- randomForest(aav ~ agecontract + PC1 + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15, data = train_ex, mtry = 5, ntree = 500)
yhat_forest_ex <- predict(forest_ex, test_ex)
varImpPlot(forest_ex)  # PC1 hugely important, which must be why accounting for its quadratic curvature improved the LM so much
set.seed(500)
train_index = sample.int(N, N_train, replace=FALSE) %>% sort
train_ex = mlb3yr[train_index,]
test_ex = mlb3yr[-train_index,]
forest_ex <- randomForest(aav ~ agecontract + PC1 + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15, data = train_ex, mtry = 5, ntree = 500)
yhat_forest_ex <- predict(forest_ex, test_ex)
varImpPlot(forest_ex)  # PC1 hugely important, which must be why accounting for its quadratic curvature improved the LM so much
# Sample Variance Importance Plot
set.seed(500)
train_index = sample.int(N, N_train, replace=FALSE) %>% sort
train_ex = mlb3yr[train_index,]
test_ex = mlb3yr[-train_index,]
forest_ex <- randomForest(aav ~ agecontract + PC1 + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15, data = train_ex, mtry = 5, ntree = 500)
yhat_forest_ex <- predict(forest_ex, test_ex)
varImpPlot(forest_ex)  # PC1 hugely important, which must be why accounting for its quadratic curvature improved the LM so much
set.seed(500)
train_index = sample.int(N, N_train, replace=FALSE) %>% sort
train_ex = mlb3yr[train_index,]
test_ex = mlb3yr[-train_index,]
forest_ex <- randomForest(aav ~ agecontract + PC1 + PC2 + PC3 + PC4 + PC5 + PC6 + PC7 + PC8 + PC9 + PC10 +
PC11 + PC12 + PC13 + PC14 + PC15, data = train_ex, mtry = 5, ntree = 500)
yhat_forest_ex <- predict(forest_ex, test_ex)
varImpPlot(forest_ex)  # PC1 hugely important, which must be why accounting for its quadratic curvature improved the LM so much
load3[order(load3[,11], decreasing = TRUE),11] # probably hard-swinging uppercutters, inclined to hit HRs or strike out, but mostly strike out
simplelm <- lm(aav ~ poly(PC1,2), data = mlb1yr)
quadpred <- predict(simplelm)
p <-
ggplot(data = mlb1yr) +
geom_point(mapping = aes(x = PC1, y = aav)) +
xlab("Principal Component 1") +
ylab("Average Annual Value") +
geom_line(aes(x = PC1, y = quadpred)) +
title("Figure 1. Mapping PC1 to AAV")
q <-
ggplot(data = mlb1yr) +
geom_point(mapping = aes(x = PC1, y = mlbcontracts1yr$war)) +
xlab("Principal Component 1") +
ylab("WAR") +
title("Figure 2. Mapping PC1 to WAR")
gridExtra::grid.arrange(p,q,ncol=2)
p <-
ggplot(data = mlb1yr) +
geom_point(mapping = aes(x = PC1, y = aav)) +
xlab("Principal Component 1") +
ylab("Average Annual Value") +
geom_line(aes(x = PC1, y = quadpred)) +
ggtitle("Figure 1. Mapping PC1 to AAV")
q <-
ggplot(data = mlb1yr) +
geom_point(mapping = aes(x = PC1, y = mlbcontracts1yr$war)) +
xlab("Principal Component 1") +
ylab("WAR") +
ggtitle("Figure 2. Mapping PC1 to WAR")
gridExtra::grid.arrange(p,q,ncol=2)
